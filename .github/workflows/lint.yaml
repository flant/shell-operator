# every push to a branch:
# - run linter
name: Lint
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  run_linter:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.20
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Check out shell-operator code
        uses: actions/checkout@v4

      - name: Restore Go modules
        id: go-modules-cache
        uses: actions/cache@v3.3.2
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('go.mod', 'go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-

      - name: Download Go modules
        if: steps.go-modules-cache.outputs.cache-hit != 'true'
        run: |
          go mod download
          echo -n "Go modules unpacked size is: " && du -sh $HOME/go/pkg/mod

      - name: Run golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b . v1.54.2
          ./golangci-lint run --sort-results --build-tags integration,test


  codespell:
    name: Run codespell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Check out addon-operator code
        uses: actions/checkout@v4

      - name: Run codespell
        run: |
          pip install codespell==v1.17.1
          codespell --skip=".git,go.mod,go.sum,*.log,*.gif,*.png,*.md" -L witht,eventtypes,uint,uptodate,afterall,keypair
