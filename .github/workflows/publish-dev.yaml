name: Publish dev image
on:
  pull_request:
    types: [labeled]
env:
  QEMU_PLATFORMS: arm64,arm
  BUILDX_PLATFORMS: "linux/amd64,linux/arm64,linux/arm/v7"
  IMAGE_REPO: flant/shell-operator-dev

jobs:
  stub:
    name: Empty job to prevent workflow fail
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.label.id != 1838515600 # not ':robot: build dev image: multiarch' label
    steps:
      - name: stub action
        run: ": This job is used to prevent the workflow to fail when all other jobs are skipped."

  unlabel:
    name: Unlabel
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.label.id == 1838515600 # ':robot: build dev image: multiarch' label
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: context.payload.label.name,
              });
            } catch (e) {
              console.log(`Error occurred while remove label. Possibly label is already removed. Ignore '${typeof e}' error.`);
            }

  build_dev_image:
    name: Dev image
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.label.id == 1838515600 # ':robot: build dev images' label
    steps:
      - uses: actions/checkout@v2.4.0

      - name: Prepare environment
        run: |
          : Setup imageTag, appVersion and dockerFile envs and build image
          imageTag=${GITHUB_REF#refs/tags/}
          APP_VERSION=${imageTag}
          FINAL_IMAGE_NAME="${IMAGE_REPO}:${imageTag}"

          : Override image name and version for dev image
          # dev-feat_branch-371e2d3b-2020.02.06_18:37:42
          APP_VERSION=${GITHUB_REF#refs/heads/}-${GITHUB_SHA::8}-$(date +'%Y.%m.%d_%H:%M:%S')
          FINAL_IMAGE_NAME="${IMAGE_REPO}:pr${{ github.event.pull_request.number }}"
          : end override

          echo "FINAL_IMAGE_NAME=${FINAL_IMAGE_NAME}" >> ${GITHUB_ENV}
          echo "APP_VERSION=${APP_VERSION}" >> ${GITHUB_ENV}

          echo "========================================="
          echo "APP_VERSION        = $APP_VERSION"
          echo "FINAL_IMAGE_NAME   = $FINAL_IMAGE_NAME"
          echo "========================================="

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
        with:
          platforms: "${{ env.QEMU_PLATFORMS }}"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push multi-arch image
        run: |
          echo "Build $FINAL_IMAGE_NAME with version '$APP_VERSION'"
          docker buildx build --push \
              --platform $BUILDX_PLATFORMS \
              --build-arg appVersion=$APP_VERSION \
              --tag $FINAL_IMAGE_NAME .

      - name: Inspect binaries
        run: |
          while read digest platform ; do
            echo "Inspect image for platform=${platform}"
            docker run --rm --platform ${platform} --entrypoint sh $FINAL_IMAGE_NAME@${digest} -c \
              'apk add file > /dev/null; file /bin/kubectl; file /bin/busybox; file /shell-operator'
          done <<< $(docker buildx imagetools inspect $FINAL_IMAGE_NAME --raw | jq '.manifests[] | .digest + " " + .platform.os +"/"+.platform.architecture' -r)
