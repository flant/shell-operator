name: Main
on: [push]
jobs:
  some_info:
    name: Some info
    runs-on: ubuntu-latest
    steps:
    - name: Some info
      run: id;pwd;lsblk;df;cat /proc/mounts

  download_go_modules:
    name: Download modules
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Download modules
        run: go mod download
        shell: bash

      - name: Pack go modules
        run: tar -czvf go_modules.tar.gz -C $HOME/go/pkg/mod .
        shell: bash

      # FIXME: https://github.community/t5/GitHub-Actions/Caching-files-between-GitHub-Action-executions/m-p/30974#M630
      - name: Upload go modules artifact
        uses: actions/upload-artifact@master
        with:
          name: go_modules
          path: go_modules.tar.gz


  build:
    name: Build and test
    needs: download_go_modules
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12
        id: go

      - name: Download go modules artifact
        uses: actions/download-artifact@master
        with:
          name: go_modules
          path: .

      - name: Unpack go modules
        run: mkdir -p $HOME/go/pkg/mod && tar -xzvf go_modules.tar.gz -C $HOME/go/pkg/mod
        shell: bash


      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Build
        run: go build -v ./cmd/shell-operator
        shell: bash

  unit_tests:
    name: Unit tests
    needs: download_go_modules
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12
        id: go

      - name: Download go modules artifact
        uses: actions/download-artifact@master
        with:
          name: go_modules
          path: .

      - name: Unpack go modules
        run: mkdir -p $HOME/go/pkg/mod && tar -xzvf go_modules.tar.gz -C $HOME/go/pkg/mod
        shell: bash

      - name: Prepare environment
        run: |
          export COVERAGE_DIR=$GITHUB_WORKSPACE/tests_coverage/unit_tests/${{ matrix.os }}
          mkdir -p $COVERAGE_DIR
          echo ::set-env name=COVERAGE_DIR::$COVERAGE_DIR
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Test shell-operator packages
        run: go test -tags test -v ./cmd/... ./pkg/... ./test/utils

  integration_tests:
    name: Integration tests
    needs: download_go_modules
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        k8s_version: [1.13, 1.16]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12
        id: go

      - name: Download go modules artifact
        uses: actions/download-artifact@master
        with:
          name: go_modules
          path: .

      - name: Unpack go modules
        run: mkdir -p $HOME/go/pkg/mod && tar -xzvf go_modules.tar.gz -C $HOME/go/pkg/mod
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Prepare environment
        run: |
          go install github.com/onsi/ginkgo/ginkgo
          echo ::set-env name=KIND_CLUSTER_VERSION::${{ matrix.k8s_version }}

      - name: Run integration tests
        run: |
          ./ginkgo --tags 'integration test' -p -r test/integration
